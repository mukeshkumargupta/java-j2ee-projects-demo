Sharding setup (locahost Ubuntu):
	
	Create required directories for data and configurations:

	mkdir -p shard-demo/configsrv shard-demo/configsrv1 shard-demo/configsrv2 shard-demo/shardrep1 shard-demo/shardrep2 shard-demo/shardrep3 shard-demo/shard2rep1 shard-demo/shard2rep2 shard-demo/shard2rep3 


	Config server:
		nohup mongod --configsvr  --port 28041 --bind_ip localhost --replSet config_repl --dbpath /home/neeraj/shard-demo/configsrv &
		
		nohup mongod --configsvr  --port 28042 --bind_ip localhost --replSet config_repl --dbpath /home/neeraj/shard-demo/configsrv1 &
		 
		nohup mongod --configsvr  --port 28043 --bind_ip localhost --replSet config_repl --dbpath /home/neeraj/shard-demo/configsrv2 &
		
		mongosh --host localhost  --port 28041
		
		rsconf = {
				  _id: "config_repl",
				  members: [
					{
					 _id: 0,
					 host: "localhost:28041"
					},
					{
					 _id: 1,
					 host: "localhost:28042"
					},
					{
					 _id: 2,
					 host: "localhost:28043"
					}
				   ]
				}
		
		rs.initiate(rsconf)
		rs.status()
					
			
		Shard server:
			nohup mongod --shardsvr --port 28081 --bind_ip localhost --replSet shard_repl --dbpath /home/neeraj/shard-demo/shardrep1 &
		
			nohup mongod --shardsvr --port 28082 --bind_ip localhost --replSet shard_repl --dbpath /home/neeraj/shard-demo/shardrep2 &
			
			nohup mongod --shardsvr --port 28083 --bind_ip localhost --replSet shard_repl --dbpath /home/neeraj/shard-demo/shardrep3 &
			
			mongosh --host localhost  --port 28081
			
			rsconf = {
				  _id: "shard_repl",
				  members: [
					{
					 _id: 0,
					 host: "localhost:28081"
					},
					{
					 _id: 1,
					 host: "localhost:28082"
					},
					{
					 _id: 2,
					 host: "localhost:28083"
					}
				   ]
				}
		
			rs.initiate(rsconf)
			rs.status()
			
			
			nohup mongod --shardsvr --port 29081 --bind_ip localhost --replSet shard2_repl --dbpath /home/neeraj/shard-demo/shard2rep1 &
		
			nohup mongod --shardsvr --port 29082 --bind_ip localhost --replSet shard2_repl --dbpath /home/neeraj/shard-demo/shard2rep2 &
			
			nohup mongod --shardsvr --port 29083 --bind_ip localhost --replSet shard2_repl --dbpath /home/neeraj/shard-demo/shard2rep3 &
			
			mongosh --host localhost  --port 29081
			
			rsconf = {
				  _id: "shard2_repl",
				  members: [
					{
					 _id: 0,
					 host: "localhost:29081"
					},
					{
					 _id: 1,
					 host: "localhost:29082"
					},
					{
					 _id: 2,
					 host: "localhost:29083"
					}
				   ]
				}
		
			rs.initiate(rsconf)
			rs.status()
			
		MongoS:
			nohup mongos --configdb config_repl/localhost:28041,localhost:28042,localhost:28043 --bind_ip localhost &

		Connect to the Sharded Cluster
			mongosh --host localhost --port 27017
			
			sh.addShard( "shard_repl/localhost:28081,localhost:28082,localhost:28083")
			sh.addShard( "shard2_repl/localhost:29081,localhost:29082,localhost:29083")
			sh.status()
			
			sh.enableSharding("demo")			
			db.zips.createIndex({ "pop" : "hashed" })
			sh.shardCollection("demo.zips", { pop : "hashed" } )
			sh.status()
			
			sh.balancerCollectionStatus( "demo.zips" )		version 4.4	
			db.zips.getShardDistribution()
			
			db.test.createIndex({ "iso_code" : 1 })
			sh.shardCollection("demo.test", { iso_code : 1} )

			sh.balancerCollectionStatus( "demo.test" )			
			db.test.getShardDistribution()			
			db.printShardingStatus()			
			sh.getBalancerState()
